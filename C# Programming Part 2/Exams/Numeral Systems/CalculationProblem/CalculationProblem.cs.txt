namespace CalculationProblem
{
    using System;
    using System.Text;

    public class CalculationProblem
    {
        private const int NumeralSystemType = 23;

        public static void Main()
        {
            char[] numeralSystem = GetNumeralSystem();
            string[] input = Console.ReadLine().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
            long sumOfTokens = 0;

            for (int i = 0; i < input.Length; i++)
            {
                string currentToken = input[i];
                long currentTokenValue = GetNumValueOfToken(currentToken, numeralSystem);

                sumOfTokens += currentTokenValue;
            }

            string resultString = GetStringValue(sumOfTokens, numeralSystem);

            Console.WriteLine("{0} = {1}", resultString, sumOfTokens);
        }

        private static char[] GetNumeralSystem()
        {
            char[] numeralSystem = new char[23];
            int index = 0;

            for (char i = 'a'; i <= 'w'; i++, index++)
            {
                numeralSystem[index] = i;
            }

            return numeralSystem;
        }

        private static long GetNumValueOfToken(string token, char[] numeralSystem)
        {
            long result = 0;
            int powIndex = 0;

            for (int i = token.Length - 1; i >= 0; i--, powIndex++)
            {
                char currentChar = token[i];
                long numberValue = Array.IndexOf(numeralSystem, currentChar);

                result += numberValue * (long)Math.Pow(NumeralSystemType, powIndex);
            }

            return result;
        }

        private static string GetStringValue(long sumOfTokens, char[] numeralSystem)
        {
            StringBuilder resultString = new StringBuilder();

            while (sumOfTokens > 0)
            {
                long currentCharValue = sumOfTokens % NumeralSystemType;
                char currentChar = numeralSystem[currentCharValue];

                sumOfTokens /= NumeralSystemType;
                resultString.Insert(0, currentChar);
            }

            string result = resultString.ToString();

            return result;
        }
    }
}
}
